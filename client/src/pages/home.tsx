
import { motion } from "framer-motion";
import { Link } from "wouter";
import { ArrowRight, TrendingUp, Users, Award, Calendar } from "lucide-react";
import React from "react";
import CountUp from "react-countup";
import { useInView } from "react-intersection-observer";

interface StatItemProps {
  icon: React.ReactNode;
  value: number;
  label: string;
  duration?: number;
  delay?: number;
}
const StatItem: React.FC<StatItemProps> = ({ icon, value, label, duration = 2.5, delay = 0 }) => {
  const [ref, inView] = useInView({
    triggerOnce: true,
    threshold: 0.1,
  });

  return (
    <motion.div
      ref={ref}
      initial={{ opacity: 0, y: 20 }}
      animate={inView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
      transition={{ duration: 0.6, delay }}
      className="text-center"
    >
      <div className="flex justify-center text-green-500 mb-3 text-4xl">
        {icon}
      </div>
      <h3 className="text-4xl font-bold text-gray-800 mb-2">
        {inView ? (
          <CountUp end={value} duration={duration} separator="," />
        ) : (
          0
        )}
        <span className="text-green-600">+</span>
      </h3>
      <p className="text-gray-600 font-medium">{label}</p>
    </motion.div>
  );
};
export default function Home() {
  return (
    <div className="min-h-screen bg-gradient-to-b from-green-50 to-white">
      <section className="pt-32 pb-20 px-4 sm:px-6 lg:px-8">
        <div className="max-w-7xl mx-auto">
          <div className="flex flex-col md:flex-row items-center">
            <motion.div 
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8 }}
              className="md:w-1/2 md:pr-12"
            >
              <motion.h1 
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.5, delay: 0.2 }}
                className="text-4xl sm:text-5xl lg:text-6xl font-bold tracking-tight text-gray-900"
              >
                H√†nh ƒë·ªông xanh,{" "}
                <span className="text-transparent bg-clip-text bg-gradient-to-r from-green-600 to-green-400">
                  T∆∞∆°ng lai xanh
                </span>
              </motion.h1>
              
              <motion.p 
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.5, delay: 0.4 }}
                className="mt-6 text-xl text-gray-600 max-w-3xl"
              >
                M·ªói h√†nh ƒë·ªông nh·ªè c·ªßa b·∫°n h√¥m nay s·∫Ω t·∫°o n√™n m·ªôt t∆∞∆°ng lai xanh t∆∞∆°i cho th·∫ø h·ªá mai sau. H√£y c√πng nhau x√¢y d·ª±ng m·ªôt c·ªông ƒë·ªìng b·∫£o v·ªá m√¥i tr∆∞·ªùng v·ªØng m·∫°nh.
              </motion.p>
              
              <motion.div 
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.5, delay: 0.6 }}
                className="mt-10 flex flex-col sm:flex-row gap-4"
              >
                <Link href="/actions">
                  <motion.button
                    whileHover={{ scale: 1.05 }}
                    whileTap={{ scale: 0.95 }}
                    className="px-8 py-4 bg-gradient-to-r from-green-600 to-green-500 text-white rounded-full font-medium text-lg shadow-lg hover:shadow-xl transition-all duration-300 flex items-center justify-center"
                  >
                    B·∫Øt ƒë·∫ßu h√†nh ƒë·ªông
                    <ArrowRight className="ml-2 h-5 w-5" />
                  </motion.button>
                </Link>
                
                <Link href="/leaderboard">
                  <motion.button
                    whileHover={{ scale: 1.05 }}
                    whileTap={{ scale: 0.95 }}
                    className="px-8 py-4 bg-white text-green-600 border-2 border-green-500 rounded-full font-medium text-lg transition-all duration-300 flex items-center justify-center"
                  >
                    Xem b·∫£ng x·∫øp h·∫°ng
                  </motion.button>
                </Link>
              </motion.div>
            </motion.div>
            
            <motion.div 
              initial={{ opacity: 0, scale: 0.8 }}
              animate={{ opacity: 1, scale: 1 }}
              transition={{ duration: 0.8, delay: 0.3 }}
              className="md:w-1/2 mt-12 md:mt-0"
            >
              <div className="relative">
                <div className="absolute -inset-1 rounded-3xl bg-gradient-to-r from-green-400 to-green-600 opacity-50 blur-xl"></div>
                <img
                  src="https://images.unsplash.com/photo-1542601906990-b4d3fb778b09?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2574&q=80"
                  alt="B·∫£o v·ªá m√¥i tr∆∞·ªùng"
                  className="relative rounded-3xl shadow-2xl object-cover w-full h-[500px]"
                />
              </div>
            </motion.div>
          </div>
        </div>
      </section>
      
     <section className="py-20 bg-gray-50 relative overflow-hidden">
           <div className="absolute top-0 left-0 opacity-5">
             <svg width="200" height="200" viewBox="0 0 200 200" fill="none" xmlns="http://www.w3.org/2000/svg">
               <path d="M58.5 48.5C58.5 75.062 37.062 96.5 10.5 96.5C-16.062 96.5 -37.5 75.062 -37.5 48.5C-37.5 21.938 -16.062 0.5 10.5 0.5C37.062 0.5 58.5 21.938 58.5 48.5Z" fill="#22C55E"/>
               <path d="M186.5 114.5C186.5 141.062 165.062 162.5 138.5 162.5C111.938 162.5 90.5 141.062 90.5 114.5C90.5 87.938 111.938 66.5 138.5 66.5C165.062 66.5 186.5 87.938 186.5 114.5Z" fill="#22C55E"/>
               <path d="M98.5 35.5C98.5 55.106 82.606 71 63 71C43.394 71 27.5 55.106 27.5 35.5C27.5 15.894 43.394 0 63 0C82.606 0 98.5 15.894 98.5 35.5Z" fill="#22C55E"/>
             </svg>
           </div>
           <div className="absolute bottom-0 right-0 opacity-5">
             <svg width="200" height="200" viewBox="0 0 200 200" fill="none" xmlns="http://www.w3.org/2000/svg">
               <path d="M58.5 48.5C58.5 75.062 37.062 96.5 10.5 96.5C-16.062 96.5 -37.5 75.062 -37.5 48.5C-37.5 21.938 -16.062 0.5 10.5 0.5C37.062 0.5 58.5 21.938 58.5 48.5Z" fill="#22C55E"/>
               <path d="M186.5 114.5C186.5 141.062 165.062 162.5 138.5 162.5C111.938 162.5 90.5 141.062 90.5 114.5C90.5 87.938 111.938 66.5 138.5 66.5C165.062 66.5 186.5 87.938 186.5 114.5Z" fill="#22C55E"/>
             </svg>
           </div>
     
           <div className="container mx-auto px-4 relative z-10">
             <motion.div
               initial={{ opacity: 0, y: 30 }}
               whileInView={{ opacity: 1, y: 0 }}
               transition={{ duration: 0.8 }}
               viewport={{ once: true }}
               className="max-w-4xl mx-auto text-center mb-16"
             >
               <h2 className="text-3xl md:text-4xl font-bold text-gray-800 mb-4">T√°c ƒë·ªông ƒë·∫øn m√¥i tr∆∞·ªùng</h2>
               <p className="text-lg text-gray-600">
                 C√πng nhau, ch√∫ng ta ƒë√£ t·∫°o ra nh·ªØng thay ƒë·ªïi t√≠ch c·ª±c cho m√¥i tr∆∞·ªùng. M·ªói h√†nh ƒë·ªông ƒë·ªÅu quan tr·ªçng v√† c√≥ √Ω nghƒ©a.
               </p>
             </motion.div>
     
             <div className="grid grid-cols-2 md:grid-cols-4 gap-8 md:gap-10">
               <StatItem
                 icon={<i className="ri-plant-line"></i>}
                 value={1280}
                 label="C√¢y xanh ƒë√£ tr·ªìng"
                 delay={0.1}
               />
               <StatItem
                 icon={<i className="ri-recycle-line"></i>}
                 value={3750}
                 label="kg r√°c t√°i ch·∫ø"
                 delay={0.2}
               />
               <StatItem
                 icon={<i className="ri-drop-line"></i>}
                 value={4800}
                 label="l√≠t n∆∞·ªõc ti·∫øt ki·ªám"
                 delay={0.3}
               />
               <StatItem
                 icon={<i className="ri-earth-line"></i>}
                 value={1920}
                 label="kg CO‚ÇÇ gi·∫£m thi·ªÉu"
                 delay={0.4}
               />
             </div>
           </div>
         </section>
      
      {/* Features Section */}
      <section className="py-16 px-4 sm:px-6 lg:px-8 bg-green-50">
        <div className="max-w-7xl mx-auto">
          <motion.div 
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.5 }}
            viewport={{ once: true }}
            className="text-center max-w-3xl mx-auto mb-16"
          >
            <h2 className="text-3xl sm:text-4xl font-bold text-gray-900">
              T√≠nh nƒÉng n·ªïi b·∫≠t
            </h2>
            <p className="mt-4 text-xl text-gray-600">
              Nh·ªØng c√°ch ƒë·ªÉ b·∫°n c√≥ th·ªÉ ƒë√≥ng g√≥p v√† x√¢y d·ª±ng c·ªông ƒë·ªìng xanh
            </p>
          </motion.div>
          
          <div className="grid grid-cols-1 md:grid-cols-3 gap-8 lg:gap-12">
            {[
              {
                title: "Ghi ch√©p h√†nh ƒë·ªông xanh",
                description: "Ghi l·∫°i m·ªói h√†nh ƒë·ªông b·∫£o v·ªá m√¥i tr∆∞·ªùng c·ªßa b·∫°n v√† nh·∫≠n ƒëi·ªÉm th∆∞·ªüng.",
                icon: "üå±",
                delay: 0.1
              },
              {
                title: "Tham gia th·ª≠ th√°ch",
                description: "Tham gia c√°c th·ª≠ th√°ch h√†ng ng√†y v√† c·∫£i thi·ªán th√†nh t√≠ch c√° nh√¢n.",
                icon: "üèÜ",
                delay: 0.2
              },
              {
                title: "T·∫°o nh√≥m c·ªông ƒë·ªìng",
                description: "L·∫≠p nh√≥m v·ªõi b·∫°n b√® v√† c√πng nhau t·∫°o t√°c ƒë·ªông t√≠ch c·ª±c ƒë·∫øn m√¥i tr∆∞·ªùng.",
                icon: "üë•",
                delay: 0.3
              }
            ].map((feature, index) => (
              <motion.div
                key={index}
                initial={{ opacity: 0, y: 30 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.5, delay: feature.delay }}
                viewport={{ once: true }}
                className="bg-white rounded-2xl p-8 shadow-lg hover:shadow-xl transition-all duration-300"
              >
                <div className="text-4xl mb-4">{feature.icon}</div>
                <h3 className="text-xl font-semibold text-gray-900">{feature.title}</h3>
                <p className="mt-3 text-gray-600">{feature.description}</p>
              </motion.div>
            ))}
          </div>
        </div>
      </section>
      
      {/* CTA Section */}
      <section className="py-20 px-4 sm:px-6 lg:px-8">
        <motion.div 
          initial={{ opacity: 0, y: 30 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.7 }}
          viewport={{ once: true }}
          className="max-w-4xl mx-auto bg-gradient-to-r from-green-600 to-green-500 rounded-3xl overflow-hidden shadow-2xl"
        >
          <div className="px-8 py-16 sm:p-16 text-center sm:text-left flex flex-col sm:flex-row items-center">
            <div className="sm:w-2/3">
              <h2 className="text-3xl font-bold tracking-tight text-white">
                S·∫µn s√†ng ƒë·ªÉ b·∫Øt ƒë·∫ßu?
              </h2>
              <p className="mt-4 text-lg text-green-100">
                Tham gia ngay h√¥m nay v√† tr·ªü th√†nh m·ªôt ph·∫ßn c·ªßa phong tr√†o b·∫£o v·ªá m√¥i tr∆∞·ªùng Vi·ªát Nam.
              </p>
              <div className="mt-8">
                <Link href="/register">
                  <motion.button
                    whileHover={{ scale: 1.05 }}
                    whileTap={{ scale: 0.95 }}
                    className="inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-full shadow-sm text-green-700 bg-white hover:bg-green-50 transition-all duration-300"
                  >
                    ƒêƒÉng k√Ω ngay
                    <ArrowRight className="ml-2 -mr-1 h-5 w-5" />
                  </motion.button>
                </Link>
              </div>
            </div>
            <motion.div 
              initial={{ scale: 0.8, opacity: 0 }}
              whileInView={{ scale: 1, opacity: 1 }}
              transition={{ duration: 0.5, delay: 0.3 }}
              viewport={{ once: true }}
              className="mt-10 sm:mt-0 sm:w-1/3 flex justify-center"
            >
              <div className="w-40 h-40 rounded-full bg-white/30 backdrop-blur-sm flex items-center justify-center p-2">
                <div className="w-full h-full rounded-full bg-white flex items-center justify-center text-green-600 text-6xl">
                  üåç
                </div>
              </div>
            </motion.div>
          </div>
        </motion.div>
      </section>
    </div>
  );
}